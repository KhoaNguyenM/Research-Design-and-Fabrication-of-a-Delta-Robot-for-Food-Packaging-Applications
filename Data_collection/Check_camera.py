import cv2
import os
import time
import random
import string
from datetime import datetime

# T·∫°o th∆∞ m·ª•c l∆∞u ·∫£nh n·∫øu ch∆∞a c√≥
save_folder = "Data_ver4_banhnho"
os.makedirs(save_folder, exist_ok=True)

# H√†m t·∫°o h·∫≠u t·ªë ng·∫´u nhi√™n cho t√™n file
def random_suffix(length=2):
    return ''.join(random.choices(string.ascii_uppercase, k=length))

# Kh·ªüi ƒë·ªông camera
cap = cv2.VideoCapture(0)
if not cap.isOpened():
    print("‚ùå Kh√¥ng th·ªÉ m·ªü camera.")
    exit()

print("üé• M·ªü camera th√†nh c√¥ng.")
print("‚èé Nh·∫•n SPACE ƒë·ªÉ b·∫Øt ƒë·∫ßu/d·ª´ng ch·ª•p li√™n t·ª•c (10 ·∫£nh/gi√¢y).")
print("‚å®Ô∏è Nh·∫•n Q ƒë·ªÉ tho√°t.")

shooting = False          # Tr·∫°ng th√°i ch·ª•p ·∫£nh
last_capture_time = time.time()

while True:
    ret, frame = cap.read()
    if not ret:
        print("‚ùå Kh√¥ng th·ªÉ nh·∫≠n frame t·ª´ camera.")
        break

    # Hi·ªÉn th·ªã h√¨nh ·∫£nh t·ª´ camera
    cv2.imshow('Camera', frame)

    # ƒê·ªçc ph√≠m nh·∫•n
    key = cv2.waitKey(1) & 0xFF

    if key != 255:
        print(f"üîë Ph√≠m nh·∫•n: {key}")

    if key == ord('q'):
        print("üëã Tho√°t ch∆∞∆°ng tr√¨nh.")
        break

    elif key == 32:  # SPACE
        shooting = not shooting
        if shooting:
            print("üì∏ ‚Üí B·∫Øt ƒë·∫ßu ch·ª•p li√™n t·ª•c 10 ·∫£nh/gi√¢y...")
        else:
            print("‚è∏Ô∏è ‚Üí D·ª´ng ch·ª•p.")

    # N·∫øu ƒëang ·ªü ch·∫ø ƒë·ªô ch·ª•p li√™n t·ª•c
    if shooting:
        current_time = time.time()
        # N·∫øu ƒë√£ ƒë·∫øn th·ªùi ƒëi·ªÉm ch·ª•p ·∫£nh ti·∫øp theo
        if current_time - last_capture_time >= 0.2:  # 0.1 gi√¢y = 10 ·∫£nh/gi√¢y
            timestamp = datetime.now().strftime("%m%d_%H%M%S_%f")[:-3]
            suffix = random_suffix()
            filename = f"{timestamp}_{suffix}.jpg"
            filepath = os.path.join(save_folder, filename)

            success = cv2.imwrite(filepath, frame)
            if success:
                print(f"‚úÖ ƒê√£ l∆∞u ·∫£nh: {filepath}")
            else:
                print(f"‚ùå Ghi ·∫£nh th·∫•t b·∫°i: {filepath}")

            last_capture_time = current_time

# Gi·∫£i ph√≥ng t√†i nguy√™n
cap.release()
cv2.destroyAllWindows()
